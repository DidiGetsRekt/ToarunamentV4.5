; KFM's constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
;Amount of life to start with
	life = 1000
;attack power (more is stronger)
	attack = 100
;defensive power (more is stronger)
	defence = 100
;Levels
	power = 6000
;Percentage to increase defense everytime player is knocked down
	fall.defence_up = 50
;Time which player lies down for, before getting up
	liedown.time = 60
;Number of points for juggling
	airjuggle = 15
;Default hit spark number for HitDefs
	sparkno = 2
;Default guard spark number
	guard.sparkno = 40
;1 to enable echo on KO
	KO.echo = 0
;Volume offset (negative for softer)
	volumescale = 100
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
	IntPersistIndex = 60
	FloatPersistIndex = 40

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 17     ;Player width (back, ground)
ground.front = 17    ;Player width (front, ground)
air.back = 12        ;Player width (back, air)
air.front = 12       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = -5, -90   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y). Recommended 0,0

[Velocity]
walk.fwd  = 1.45      ;Walk forward
walk.back = -2.2     ;Walk backward
run.fwd  = 10, 0    ;Run forward (x, y)
run.back = -4.5,-3.8 ;Hop backward (x, y)
jump.neu = 0,-10.4    ;Neutral jumping velocity (x, y)
jump.back = -3.15    ;Jump back Speed (x, y)
jump.fwd = 3.75       ;Jump forward Speed (x, y)
runjump.back = -2.45,-10.5 ;Running jump speeds (opt)
runjump.fwd = 3.5,-10.5      ;.
airjump.neu = 0,-10      ;.
airjump.back = -5      ;Air jump speeds (opt)
airjump.fwd = 5         ;.
air.gethit.groundrecover = -.15,-3.5  ;Velocity for ground recovery state (x, y) **MUGEN 1.0**
air.gethit.airrecover.mul = .5,.2     ;Multiplier for air recovery velocity (x, y) **MUGEN 1.0**
air.gethit.airrecover.add = 0,-4.5    ;Velocity offset for air recovery (x, y) **MUGEN 1.0**
air.gethit.airrecover.back = -1       ;Extra x-velocity for holding back during air recovery **MUGEN 1.0**
air.gethit.airrecover.fwd = 0         ;Extra x-velocity for holding forward during air recovery **MUGEN 1.0**
air.gethit.airrecover.up = -2         ;Extra y-velocity for holding up during air recovery **MUGEN 1.0**
air.gethit.airrecover.down = 1.5      ;Extra y-velocity for holding down during air recovery **MUGEN 1.0**

[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 75   ;Minimum distance from ground before you can air jump (opt)
yaccel = .5          ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching
stand.friction.threshold = 2          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .05       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 25           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 10   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = -1  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = 15      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, 20            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = 12          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

;Default language victory quotes (optional).  **MUGEN 1.0**
;If this section is included, the default language victory quotes must be in English.
[Quotes]
; Up to 100 victory quotes can be specified per language (victory0 - victory99)
victory1 = "You must defeat Tu Shou to stand a chance."
victory2 = "You need a lot of training. Come back in ten years."
victory3 = "You look familiar. Did I see you on TV?"
victory4 = "Your moves are too predictable. You want to learn Kung Fu Palm? It's not for novices."
victory5 = "That was a good workout."
victory6 = "I want to challenge more skilled fighters."
victory7 = "What do you mean my girlfriend is in another temple?"

;Alternate language victory quotes (optional).
;0 or more alternate language sections may be added, preceded by the
;ISO 639-1 code followed by a ".", e.g. "[ja.Quotes]".
;See language setting in mugen.cfg.
[ja.Quotes]
victory1 = "カンフー突き手を破らぬ限り、お前に勝ち目はない！"
victory2 = "十年早いんだぞ"
victory3 = "お前は見覚えがあるな。テレビにでも…？"
victory4 = "お前の動きは見破りやすすぎる。　なに、カンフー突き手が覚えたいんだと？　素人には無理だぞ"
victory5 = "ふー。　いい汗だった"
victory6 = "もっと強い相手に挑戦したい"
victory7 = "なんだと！彼女はここにもいないと？"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = time >= 290
;flag = intro
flag = invisible

[State 0, Helper]
type = Helper
trigger1 = animelem=1
helpertype = player
name = "Aleistan"
ID = 171
stateno = 171 
pos = 100,0
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 1
supermovetime = 0
pausemovetime = 0


[State 0, Helper]
type = Helper
trigger1 = time = 155
helpertype = normal ;player
name = "aura"
ID = 172
stateno = 172
pos = 0,0
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 1
supermovetime = 0
pausemovetime = 0
;scale = 0.5,0.5
;size.xscale = 0.75
;size.yscale = 0.75
;size.ground.back = 
;size.ground.front = 
;size.air.back = 
;size.air.front = 
;size.height = 
;size.proj.doscale = 
;size.head.pos = , 
;size.mid.pos = , 
;size.shadowoffset = 
;ignorehitpause = 
;persistent = 





[State 0, VelAdd]
type = Velset
trigger1 = time = [155,200]
x = 0
y = -1.5
;ignorehitpause = 
;persistent = 

[State 0, VelAdd]
type = Velset
trigger1 = time>=200
x = 0
y = 0
;ignorehitpause = 
;persistent = 

[State 182,Round not over]
		Type=assertSpecial
		Trigger1= time <=350
		flag=Roundnotover


[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;aleistan helper
[Statedef 171]
anim=171
type = S
sprpriority = 5

[State 0, PalFX]
type = PalFX
trigger1 = animelem = 65
time = 36
add = 256,256,256
mul = 256,256,256
sinadd = -256,-256,-256,144
invertall = 0
color = 256
;ignorehitpause = 
;persistent = 

[State 0, Explod]
type = Explod
trigger1 = time = 215
anim = 173
ID = 173
pos = -175,-75
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 3
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0

[State 0, Explod]
type = Explod
trigger1 = time = 215
anim = 174
ID = 174
pos = -175,-75
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 3
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0

[State 0, Explod]
type = Explod
trigger1 = time = 200
anim = 1720
ID = 1720
pos = -75,-150
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0

[State 0, Explod]
type = Explod
trigger1 = time = 205
anim = 1721
ID = 1721
pos = -275,-150
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0

[State 0, Explod]
type = Explod
trigger1 = time = 210
anim = 1722
ID = 1722
pos = -175,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0

[State 0, Helper]
type = Helper
trigger1 = time = 250
helpertype = normal ;player
name = "black hole"
ID = 173
stateno = 173
pos = -175,-75
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 1
supermovetime = 0
pausemovetime = 0
sprpriority = 1
;scale = 0.5,0.5
;size.xscale = 0.75
;size.yscale = 0.75
;size.ground.back = 
;size.ground.front = 
;size.air.back = 
;size.air.front = 
;size.height = 
;size.proj.doscale = 
;size.head.pos = , 
;size.mid.pos = , 
;size.shadowoffset = 
;ignorehitpause = 
;persistent = 

;red aura thing
[Statedef 172]
anim = 172
type = S

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = time >= 135
;flag = intro
flag = invisible


[State 0, VelAdd]
type = Velset
trigger1 = time = [0,45]
x = 0
y = -1.5
;ignorehitpause = 
;persistent = 

[State 0, VelAdd]
type = Velset
trigger1 = time>=45
x = 0
y = 0
;ignorehitpause = 
;persistent = 

;black hole
[Statedef 173]
anim = 1741
type = A
sprpriority = 1



[State 0, AngleSet]
type = AngleSet
trigger1 = 1
value = 1
;ignorehitpause = 
;persistent = 

[State 0, AngleDraw]
type = AngleDraw
trigger1 = 1
value = time%360
;scale = 
;ignorehitpause = 
;persistent = 

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0
;ignorehitpause = 
;persistent = 


;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState 
trigger1 = Time = 0 && !var(2)
value = 181

;[State 180, 1]
;type = ChangeState 
;trigger1 = Time = 0 && var(2)
;value = 3011

;---------------------------------------------------------------------------
; evil laugh
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 0, Explod]
type = Explod
trigger1 = animelem=2
anim = 1810
;ID = 
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -1
pausemovetime = 0
scale = 1,1
sprpriority = 5
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0


[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

; Pre-intro
[Statedef 190]
type = S
ctrl = 0
velset = 0,0


[State 190, 2] ;Go straight to intro.
type = ChangeState
trigger1 = Time = 0
value = 191
;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
velset = 0,0
[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

;for special wins
[State 0, VarSet]
type = VarSet
trigger1 = animelem=1
v = 2    ;fv = 10
value = 0

[State 191, 1] ;Freeze animation until PreIntro is over
type = Changestate
trigger1 = Roundsexisted = 0
value = 192 + random%2

;first intro
[Statedef 192]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro
[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0


;ignorehitpause = 
;persistent = 

;ignorehitpause = 
;persistent = 

; You can delete the following two controllers if you're building your own
; character using KFM. These are the wood pieces that KFM kicks.


[State 191, Cloud]
type = Explod
trigger1 = AnimElem = 8
anim = 192
postype = p1
pos = 0, 0
velocity = 2, 0
accel=2,0
removetime = 35
scale =0.5,0.5
sprpriority=9



[State 191, Cloud 2]
type = Explod
trigger1 = AnimElem = 8
anim = 192
postype = p1
pos = 0, -50
velocity = -2, 0
accel=-2,0
removetime = 35
scale =0.5,0.5
sprpriority=9




[State 191, Building]
type = Explod
trigger1 = AnimElem = 2
anim = 191
postype = p1
pos=0,-500
vel=0,13
removetime = 20
sprpriority=6

[State 191, Explosion]
type = Explod
trigger1 = AnimElem = 4
anim = 193
postype = p1
pos=0,0
sprpriority=7

[State 191, Shadow]
type = Explod
trigger1 = AnimElem = 5
anim = 194
postype = p1
pos=0,0
sprpriority=8
; You can delete the following two controllers if you're building your own
; character using KFM. These play back the sounds of the wood block being
; broken.
[State 191, Snd 1]
type = PlaySnd
trigger1 = AnimElem = 7
value = F5,2
volume = -40

[State 191, Snd 2]
type = PlaySnd
trigger1 = AnimElemTime(7) = 3
value = F5,3
volume = -80

;second intro
[Statedef 193]
type = S
ctrl = 0
anim = 1903
velset = 0,0

[State 0, Explod]
type = Explod
trigger1 = time=0
anim = 1901
;ID = 
pos = 0,-30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0
[State 0, Explod]
type = Explod
trigger1 = time=0
anim = 1902
;ID = 
pos = 0,-30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0


[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro
[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0
;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, 1]
type = CtrlSet
trigger1 = Time = 40
value = 1

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;smoking
[Statedef 196]
type = S
ctrl = 0
anim = 196
velset = 0,0
movetype = I
physics = S
sprpriority = 2


[State 195, 1]
type = CtrlSet
trigger1 = animelem= 11
value = 1

[State 196, life add]
type = lifeAdd
trigger1= animelem=11
value = -10





;---------------------------------------------------------------------------
; Kung Fu Palm
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.



;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

[Statedef -2]


[State -2, DefenceMulSet]
Type = DefenceMulSet
Trigger1 = Life <= 300
Value = 0.7
IgnoreHitPause = 1

[State -2, DefenceMulSet]
Type = DefenceMulSet
Trigger1 = Life <= 150
Value = 0.5
IgnoreHitPause = 1

[State 0, Width]
type = Width
trigger1 = stateno!=[2000,3999]
edge = 15,0
;value = 0,0
ignorehitpause = 1
;persistent = 


;Charge Explod Remove
[State -2, remove]
Type=RemoveExplod
Trigger1 = stateno!=6500
ID = 13370
ignorehitpause=1


;Gives 1000 at the start of the battle
[State -2,初期ゲージ設定]
	Type= PowerSet
	trigger1 = roundsexisted = 0 && roundstate = 0 && roundno = 1;
	value = 1000 ; 0〜6000で設定可能 1000単位で1本 デフォルトは1000


[State 0, AssertSpecial]
type = AssertSpecial
triggerall=numhelper(1541)=1
trigger1 = helper(1541),stateno=1545
flag = invisible

[State 0, AssertSpecial]
type = ctrlset
triggerall=numhelper(1541)=1
trigger1 = helper(1541),stateno=1545
value = ifelse((helper(1541), time < 5360),0,1)

;Air dash count reset
[State -2];ループ
 	type = Varset
 	triggerAll = var(17)
	trigger1 = statetype != A
	trigger2 = movetype = H
 	var(17)=0
	ignorehitpause = 1

;DamageDampening Reset
[State -2]
	type = Varset
	trigger1 = enemy,movetype != H
	trigger2 = enemy,stateno = [120,155]
	fv = 0
	value = 1
	ignorehitpause = 1


[State -2];補正
	type = Varset
	trigger1 = enemy,movetype != H
	trigger2 = enemy,stateno = [120,155]
	fv = 10
	value = 1
	ignorehitpause = 1

;Cornerpush reset
[State -2];ヒットバック
	type = Varset
	trigger1 = enemy,movetype != H
	trigger2 = enemy,stateno = [120,155]
	fvar(11)=0
	ignorehitpause = 1

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
